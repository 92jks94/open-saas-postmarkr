/**
 * Smart Page SEO Component
 * 
 * Automatically loads SEO metadata from seoConfig.ts based on current route.
 * This is a DRY wrapper around the base Seo component.
 * 
 * Usage:
 * ```tsx
 * // Instead of manually passing props:
 * <Seo title="About Us" description="..." canonical="..." />
 * 
 * // Just use:
 * <PageSeo />
 * ```
 * 
 * The component will automatically:
 * - Look up current route in ROUTE_SEO_CONFIG
 * - Apply route-specific or default SEO metadata
 * - Generate canonical URL from current path
 * 
 * For custom metadata (not in config), use the base <Seo> component directly.
 */

import { useLocation } from 'react-router-dom';
import { Seo, SeoProps } from './Seo';
import { getSeoConfigForRoute } from './seoConfig';

interface PageSeoProps {
  /** Override config title */
  title?: string;
  /** Override config description */
  description?: string;
  /** Override config keywords */
  keywords?: string;
  /** Override config ogImage */
  ogImage?: string;
  /** Override config ogType */
  ogType?: 'website' | 'article';
  /** Set noindex (useful for 404 pages) */
  noindex?: boolean;
  /** Additional meta tags */
  children?: React.ReactNode;
}

/**
 * Smart SEO component that pulls metadata from seoConfig
 * Allows per-page overrides via props
 */
export function PageSeo(props: PageSeoProps = {}) {
  const location = useLocation();
  
  // Get config for current route (or default)
  const config = getSeoConfigForRoute(location.pathname);
  
  // Merge config with props (props take precedence)
  const finalProps: SeoProps = {
    title: props.title || config.title,
    description: props.description || config.description,
    keywords: props.keywords || config.keywords,
    ogImage: props.ogImage || config.ogImage,
    ogType: props.ogType || config.ogType,
    noindex: props.noindex || config.noindex,
    // Note: canonical is auto-generated by Seo component from useLocation
    children: props.children,
  };
  
  return <Seo {...finalProps} />;
}

