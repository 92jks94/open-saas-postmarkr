/**
 * Type definitions for Mail-related data structures
 */

import type { MailPiece, MailAddress, File, MailPieceStatusHistory } from 'wasp/entities';

/**
 * MailPiece with all relations included
 * Used when fetching complete mail piece data with addresses, file, and history
 */
export type MailPieceWithRelations = MailPiece & {
  senderAddress: MailAddress;
  recipientAddress: MailAddress;
  file: File | null;
  statusHistory: MailPieceStatusHistory[];
};

/**
 * Lob thumbnail data structure
 * Thumbnails are generated by Lob when a mail piece is created
 */
export interface LobThumbnails {
  thumbnails: string[]; // Array of thumbnail image URLs
}

/**
 * Props for components that display mail previews
 */
export interface MailPreviewProps {
  /** Lob-generated thumbnail URLs (can be array or null from database) */
  thumbnails?: LobThumbnails | string[] | null;
  /** Direct URL to view mail piece in Lob dashboard */
  lobPreviewUrl?: string | null;
  /** Type of mail piece (letter, postcard, etc.) */
  mailType?: string;
  /** Lob ID of the mail piece */
  lobId?: string | null;
  /** Optional CSS classes */
  className?: string;
}

/**
 * Utility function to parse Lob thumbnails from various formats
 * Handles both database JSON and direct arrays
 */
export function parseLobThumbnails(thumbnails: any): string[] {
  if (!thumbnails) return [];
  
  // If it's already an array
  if (Array.isArray(thumbnails)) {
    return thumbnails.filter(url => typeof url === 'string');
  }
  
  // If it's a JSON object with thumbnail data
  if (typeof thumbnails === 'object') {
    // Lob returns thumbnails as an array, sometimes nested in objects
    if (thumbnails.thumbnails && Array.isArray(thumbnails.thumbnails)) {
      return thumbnails.thumbnails;
    }
    // Handle different possible structures
    const values = Object.values(thumbnails);
    if (values.length > 0 && typeof values[0] === 'string') {
      return values as string[];
    }
  }
  
  return [];
}
